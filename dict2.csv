"S.find(str, [start],[end])",Поиск подстроки в строке. Возвращает номер первого вхождения или -1,list.append(x),Добавляет элемент в конец списка,dict.clear() ,очищает словарь,set.isdisjoint(other),"истина, если set и other не имеют общих элементов","tuple.index(x, [start [, end]])",Возвращает положение первого элемента со значением x (при этом поиск ведется от start до end)
"S.rfind(str, [start],[end])",Поиск подстроки в строке. Возвращает номер последнего вхождения или -1,list.extend(L),"Расширяет список list, добавляя в конец все элементы списка L",dict.copy(),возвращает копию словаря,set.issubset(other) или set <= other,все элементы set принадлежат other,tuple.count(x),Возвращает количество элементов со значением x
"S.index(str, [start],[end])",Поиск подстроки в строке. Возвращает номер первого вхождения или вызывает ValueError,"list.insert(i, x)",Вставляет на i-ый элемент значение x,"dict.fromkeys(seq[, value])",создает словарь с ключами из seq и значением value (по умолчанию None),set.issuperset(other) или set >= other,"анологично ""issubset""",,
"S.rindex(str, [start],[end])",Поиск подстроки в строке. Возвращает номер последнего вхождения или вызывает ValueError,list.remove(x),"Удаляет первый элемент в списке, имеющий значение x. ValueError, если такого элемента не существует","dict.get(key[, default])","возвращает значение ключа, но если его нет, не бросает исключение, а возвращает default (по умолчанию None)","set.union(other, ...) или set | other | ...",объединение нескольких множеств,,
"S.replace(шаблон, замена)",Замена шаблона,list.pop([i]),"Удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент",dict.items(),"возвращает пары (ключ, значение)","set.intersection(other, ...) или set & other & ...",пересечение,,
S.split(символ),Разбиение строки по разделителю,"list.index(x, [start [, end]])",Возвращает положение первого элемента со значением x (при этом поиск ведется от start до end),dict.keys() ,возвращает ключи в словаре,"set.difference(other, ...) или set - other - ...","множество из всех элементов set, не принадлежащие ни одному из other",,
S.isdigit(),Состоит ли строка из цифр,list.count(x),Возвращает количество элементов со значением x,"dict.pop(key[, default])","удаляет ключ и возвращает значение. Если ключа нет, возвращает default (по умолчанию бросает исключение)",set.symmetric_difference(other), set ^ other,,
S.isalpha(),Состоит ли строка из букв,list.sort([key=функция]),Сортирует список на основе функции,dict.popitem(),"удаляет и возвращает пару (ключ, значение). Если словарь пуст, бросает исключение KeyError. Помните, что словари неупорядочены",set.copy(),копия множества,,
S.isalnum(),Состоит ли строка из цифр или букв,list.reverse(),Разворачивает список,"dict.setdefault(key[, default])","возвращает значение ключа, но если его нет, не бросает исключение, а создает ключ с значением default (по умолчанию None)","set.update(other, ...); set |= other | ...",объединение,,
S.islower(),Состоит ли строка из символов в нижнем регистре,list.copy(),Поверхностная копия списка,dict.update([other]),"обновляет словарь, добавляя пары (ключ, значение) из other. Существующие ключи перезаписываются. Возвращает None (не новый словарь!)","set.intersection_update(other, ...); set &= other & ...",пересечение,,
S.isupper(),Состоит ли строка из символов в верхнем регистре,list.clear(),Очищает список,dict.values(),возвращает значения в словаре,"set.difference_update(other, ...); set -= other | ...",вычитание,,
S.isspace(),"Состоит ли строка из неотображаемых символов (пробел, символ перевода страницы ('\f'), ""новая строка"" ('\n'), ""перевод каретки"" ('\r'), ""горизонтальная табуляция"" ('\t') и ""вертикальная табуляция"" ('\v'))",,,,,set.symmetric_difference_update(other), set ^= other,,
S.istitle(),Начинаются ли слова в строке с заглавной буквы,,,,,set.add(elem),добавляет элемент в множество,,
S.upper(),Преобразование строки к верхнему регистру,,,,,set.remove(elem),"удаляет элемент из множества. KeyError, если такого элемента не существует",,
S.lower(),Преобразование строки к нижнему регистру,,,,,set.discard(elem),"удаляет элемент, если он находится в множестве",,
S.startswith(str),Начинается ли строка S с шаблона str,,,,,set.pop(),"удаляет первый элемент из множества. Так как множества не упорядочены, нельзя точно сказать, какой элемент будет первым",,
S.endswith(str),Заканчивается ли строка S шаблоном str,,,,,set.clear(),очистка множества,,
S.join(список),Сборка строки из списка с разделителем S,,,,,,,,
S.capitalize(),"Переводит первый символ строки в верхний регистр, а все остальные в нижний",,,,,,,,
"S.center(width, [fill])","Возвращает отцентрованную строку, по краям которой стоит символ fill (пробел по умолчанию)",,,,,,,,
"S.count(str, [start],[end])","Возвращает количество непересекающихся вхождений подстроки в диапазоне [начало, конец] (0 и длина строки по умолчанию)",,,,,,,,
S.expandtabs([tabsize]),"Возвращает копию строки, в которой все символы табуляции заменяются одним или несколькими пробелами, в зависимости от текущего столбца. Если TabSize не указан, размер табуляции полагается равным 8 пробелам",,,,,,,,
S.lstrip([chars]),Удаление пробельных символов в начале строки,,,,,,,,
S.rstrip([chars]),Удаление пробельных символов в конце строки,,,,,,,,
S.strip([chars]),Удаление пробельных символов в начале и в конце строки,,,,,,,,
S.partition(шаблон),"Возвращает кортеж, содержащий часть перед первым шаблоном, сам шаблон, и часть после шаблона. Если шаблон не найден, возвращается кортеж, содержащий саму строку, а затем две пустых строки",,,,,,,,
S.rpartition(sep),"Возвращает кортеж, содержащий часть перед последним шаблоном, сам шаблон, и часть после шаблона. Если шаблон не найден, возвращается кортеж, содержащий две пустых строки, а затем саму строку",,,,,,,,
S.swapcase(),"Переводит символы нижнего регистра в верхний, а верхнего – в нижний",,,,,,,,
S.title(),"Первую букву каждого слова переводит в верхний регистр, а все остальные в нижний",,,,,,,,
S.zfill(width),"Делает длину строки не меньшей width, по необходимости заполняя первые символы нулями",,,,,,,,
"S.ljust(width, fillchar="" "")","Делает длину строки не меньшей width, по необходимости заполняя последние символы символом fillchar",,,,,,,,
"S.rjust(width, fillchar="" "")","Делает длину строки не меньшей width, по необходимости заполняя первые символы символом fillchar",,,,,,,,
"S.format(*args, **kwargs)",Форматирование строки,,,,,,,,
